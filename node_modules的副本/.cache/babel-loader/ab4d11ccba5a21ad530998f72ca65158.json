{"ast":null,"code":"var _jsxFileName = \"/Users/an_ger/coding/An_Ger UI/src/components/Menu/subMenu.tsx\";\nimport React, { useContext, useState } from 'react';\nimport classNames from 'classnames';\nimport { MenuContext } from './menu';\n\nconst SubMenu = ({\n  index,\n  title,\n  children,\n  className\n}) => {\n  const context = useContext(MenuContext);\n  const openedSubMenus = context.defaultOpenSubMenus;\n  const isOpend = index && context.mode === 'vertical' ? openedSubMenus.includes(index) : false;\n  const [menuOpen, setOpen] = useState(isOpend);\n  const classes = classNames('menu-item submenu-item', className, {\n    'is-active': context.index === index,\n    'is-opened': menuOpen,\n    'is-vertical': context.mode === 'vertical'\n  });\n\n  const handleClick = e => {\n    e.preventDefault();\n    setOpen(!menuOpen);\n  };\n\n  const renderChildren = () => {\n    const subMenuClasses = classNames('Porn-submenu', {\n      'menu-opened': menuOpen\n    });\n    const childrenComponent = React.Children.map(children, (child, i) => {\n      const childElement = child;\n\n      if (childElement.type.displayName === 'MenuItem') {\n        return childElement;\n      } else {\n        console.error(\"warning\");\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: subMenuClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, childrenComponent);\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submenu-title\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, title), renderChildren());\n};\n\nSubMenu.displayName = \"SubMenu\";\nexport default SubMenu;","map":{"version":3,"sources":["/Users/an_ger/coding/An_Ger UI/src/components/Menu/subMenu.tsx"],"names":["React","useContext","useState","classNames","MenuContext","SubMenu","index","title","children","className","context","openedSubMenus","defaultOpenSubMenus","isOpend","mode","includes","menuOpen","setOpen","classes","handleClick","e","preventDefault","renderChildren","subMenuClasses","childrenComponent","Children","map","child","i","childElement","type","displayName","console","error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAAoE,OAApE;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,WAAR,QAA0B,QAA1B;;AAOA,MAAMC,OAA+B,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAAD,KAAyC;AAC7E,QAAMC,OAAO,GAAGT,UAAU,CAACG,WAAD,CAA1B;AACA,QAAMO,cAAc,GAAGD,OAAO,CAACE,mBAA/B;AACA,QAAMC,OAAO,GAAIP,KAAK,IAAII,OAAO,CAACI,IAAR,KAAiB,UAA3B,GAAyCH,cAAc,CAACI,QAAf,CAAwBT,KAAxB,CAAzC,GAA0E,KAA1F;AACA,QAAM,CAAEU,QAAF,EAAYC,OAAZ,IAAwBf,QAAQ,CAACW,OAAD,CAAtC;AACA,QAAMK,OAAO,GAAGf,UAAU,CAAC,wBAAD,EAA2BM,SAA3B,EAAsC;AAC9D,iBAAaC,OAAO,CAACJ,KAAR,KAAkBA,KAD+B;AAE9D,iBAAaU,QAFiD;AAG9D,mBAAeN,OAAO,CAACI,IAAR,KAAiB;AAH8B,GAAtC,CAA1B;;AAMA,QAAMK,WAAW,GAAIC,CAAD,IAAyB;AACzCA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,OAAO,CAAC,CAACD,QAAF,CAAP;AACH,GAHD;;AAIA,QAAMM,cAAc,GAAG,MAAM;AACzB,UAAMC,cAAc,GAAGpB,UAAU,CAAC,cAAD,EAAiB;AAC9C,qBAAea;AAD+B,KAAjB,CAAjC;AAGA,UAAMQ,iBAAiB,GAAGxB,KAAK,CAACyB,QAAN,CAAeC,GAAf,CAAmBlB,QAAnB,EAA6B,CAACmB,KAAD,EAAQC,CAAR,KAAc;AACjE,YAAMC,YAAY,GAAGF,KAArB;;AACA,UAAGE,YAAY,CAACC,IAAb,CAAkBC,WAAlB,KAAkC,UAArC,EAAiD;AAC7C,eAAOF,YAAP;AACH,OAFD,MAEM;AACFG,QAAAA,OAAO,CAACC,KAAR,CAAc,SAAd;AACH;AACJ,KAPyB,CAA1B;AAQA,wBACI;AAAI,MAAA,SAAS,EAAIV,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,iBADL,CADJ;AAKH,GAjBD;;AAkBA,sBACI;AAAI,IAAA,GAAG,EAAIlB,KAAX;AAAkB,IAAA,SAAS,EAAEY,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAEC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,KADL,CADJ,EAIKe,cAAc,EAJnB,CADJ;AAQH,CAzCD;;AA0CAjB,OAAO,CAAC0B,WAAR,GAAsB,SAAtB;AACA,eAAe1B,OAAf","sourcesContent":["import React, {useContext, useState, FunctionComponentElement} from 'react'\nimport classNames from 'classnames'\nimport {MenuContext} from './menu'\nimport {MenuItemProps} from './menuItem'\nexport interface SubMenuProps {\n    index ?: number;\n    title: string;\n    className ?: string;\n}\nconst SubMenu: React.FC<SubMenuProps> = ({index, title, children, className}) => {\n    const context = useContext(MenuContext)\n    const openedSubMenus = context.defaultOpenSubMenus as Array<string>\n    const isOpend = (index && context.mode === 'vertical') ? openedSubMenus.includes(index) : false\n    const [ menuOpen, setOpen ] = useState(isOpend)\n    const classes = classNames('menu-item submenu-item', className, {\n      'is-active': context.index === index,\n      'is-opened': menuOpen,\n      'is-vertical': context.mode === 'vertical'\n    })\n\n    const handleClick = (e: React.MouseEvent) => {\n        e.preventDefault()\n        setOpen(!menuOpen)\n    }\n    const renderChildren = () => {\n        const subMenuClasses = classNames('Porn-submenu', {\n            'menu-opened': menuOpen\n        })\n        const childrenComponent = React.Children.map(children, (child, i) => {\n            const childElement = child as FunctionComponentElement<MenuItemProps>\n            if(childElement.type.displayName === 'MenuItem') {\n                return childElement\n            }else {\n                console.error(\"warning\")\n            }\n        })\n        return (\n            <ul className = {subMenuClasses}>\n                {childrenComponent}\n            </ul>\n        )\n    }\n    return (\n        <li key = {index} className={classes}>\n            <div className=\"submenu-title\" onClick={handleClick}>\n                {title}\n            </div>\n            {renderChildren()}\n        </li>\n    )\n}\nSubMenu.displayName = \"SubMenu\"\nexport default SubMenu;"]},"metadata":{},"sourceType":"module"}