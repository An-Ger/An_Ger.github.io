{"ast":null,"code":"var _jsxFileName = \"/Users/an_ger/coding/An_Ger UI/src/components/Menu/menu.tsx\";\nimport React, { useState, createContext } from 'react';\nimport classNames from 'classnames';\nexport const MenuContext = createContext({\n  index: 0\n});\n\nconst Menu = props => {\n  const {\n    className,\n    mode,\n    style,\n    children,\n    defaultIndex,\n    onSelect\n  } = props;\n  const [currentActive, setActive] = useState(defaultIndex);\n  const classes = classNames('Porn-menu', className, {\n    'menu-vertical': mode === 'vertical',\n    'menu-horizontal': mode !== 'vertical'\n  });\n\n  const handleClick = index => {\n    setActive(index);\n\n    if (onSelect) {\n      onSelect(index);\n    }\n  };\n\n  const passedContext = {\n    index: currentActive ? currentActive : 0,\n    onSelect: handleClick\n  };\n\n  const renderChildren = () => {\n    return React.Children.map(children, (child, index) => {\n      const childElement = child;\n      const {\n        displayName\n      } = childElement.type;\n\n      if (displayName === 'MenuItem' || displayName === 'SubMenu') {\n        return React.cloneElement(childElement, {\n          index\n        });\n      } else {\n        console.error('Warning: Menu has a child which is not a MenuItem');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: passedContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, renderChildren()));\n};\n\nMenu.defaultProps = {\n  defaultIndex: 0,\n  mode: 'horizontal'\n};\nexport default Menu;","map":{"version":3,"sources":["/Users/an_ger/coding/An_Ger UI/src/components/Menu/menu.tsx"],"names":["React","useState","createContext","classNames","MenuContext","index","Menu","props","className","mode","style","children","defaultIndex","onSelect","currentActive","setActive","classes","handleClick","passedContext","renderChildren","Children","map","child","childElement","displayName","type","cloneElement","console","error","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAgBA,OAAO,MAAMC,WAAW,GAAGF,aAAa,CAAe;AAACG,EAAAA,KAAK,EAAE;AAAR,CAAf,CAAjC;;AACP,MAAMC,IAAyB,GAAIC,KAAD,IAAW;AACzC,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,YAAnC;AAAiDC,IAAAA;AAAjD,MAA6DN,KAAnE;AACA,QAAM,CAACO,aAAD,EAAgBC,SAAhB,IAA6Bd,QAAQ,CAACW,YAAD,CAA3C;AACA,QAAMI,OAAO,GAAGb,UAAU,CAAC,WAAD,EAAcK,SAAd,EAAyB;AAC/C,qBAAiBC,IAAI,KAAK,UADqB;AAE/C,uBAAkBA,IAAI,KAAK;AAFoB,GAAzB,CAA1B;;AAIA,QAAMQ,WAAW,GAAIZ,KAAD,IAAmB;AACnCU,IAAAA,SAAS,CAACV,KAAD,CAAT;;AACA,QAAGQ,QAAH,EAAY;AACRA,MAAAA,QAAQ,CAACR,KAAD,CAAR;AACH;AACJ,GALD;;AAMA,QAAMa,aAA2B,GAAG;AAChCb,IAAAA,KAAK,EAAES,aAAa,GAAGA,aAAH,GAAmB,CADP;AAEhCD,IAAAA,QAAQ,EAAEI;AAFsB,GAApC;;AAIA,QAAME,cAAc,GAAG,MAAM;AACzB,WAAOnB,KAAK,CAACoB,QAAN,CAAeC,GAAf,CAAmBV,QAAnB,EAA6B,CAACW,KAAD,EAAQjB,KAAR,KAAkB;AAClD,YAAMkB,YAAY,GAAGD,KAArB;AACA,YAAM;AAACE,QAAAA;AAAD,UAAgBD,YAAY,CAACE,IAAnC;;AACA,UAAGD,WAAW,KAAK,UAAhB,IAA8BA,WAAW,KAAK,SAAjD,EAA2D;AACvD,eAAOxB,KAAK,CAAC0B,YAAN,CAAmBH,YAAnB,EAAiC;AACpClB,UAAAA;AADoC,SAAjC,CAAP;AAGH,OAJD,MAIK;AACDsB,QAAAA,OAAO,CAACC,KAAR,CAAc,mDAAd;AACH;AACJ,KAVM,CAAP;AAWH,GAZD;;AAaA,sBACI;AAAI,IAAA,SAAS,EAAEZ,OAAf;AAAwB,IAAA,KAAK,EAAEN,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEQ,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCC,cAAc,EADf,CADJ,CADJ;AAOH,CArCD;;AAsCAb,IAAI,CAACuB,YAAL,GAAoB;AAChBjB,EAAAA,YAAY,EAAG,CADC;AAEhBH,EAAAA,IAAI,EAAG;AAFS,CAApB;AAIA,eAAeH,IAAf","sourcesContent":["import React, {useState, createContext} from 'react'\nimport classNames from 'classnames'\nimport {MenuItemProps} from './menuItem'\n\ntype MenuMode = 'horizontal' | 'vertical'\ntype SelectCallback = (selectedIndex: number) => void;\nexport interface MenuProps {\n    defaultIndex ?: number;\n    className ?: string;\n    mode ?: MenuMode;\n    style ?: React.CSSProperties;\n    onSelect ?: (selectedIndex: number) => void;\n}\ninterface IMenuContext {\n    index: number;\n    onSelect ?: SelectCallback;\n}\nexport const MenuContext = createContext<IMenuContext>({index: 0})\nconst Menu: React.FC<MenuProps> = (props) => {\n    const {className, mode, style, children, defaultIndex, onSelect} = props\n    const [currentActive, setActive] = useState(defaultIndex)\n    const classes = classNames('Porn-menu', className, {\n        'menu-vertical': mode === 'vertical',\n        'menu-horizontal':mode !== 'vertical'\n    })\n    const handleClick = (index: number) => {\n        setActive(index)\n        if(onSelect){\n            onSelect(index)\n        }\n    }\n    const passedContext: IMenuContext = {\n        index: currentActive ? currentActive : 0,\n        onSelect: handleClick,\n    }\n    const renderChildren = () => {\n        return React.Children.map(children, (child, index) => {\n            const childElement = child as React.FunctionComponentElement<MenuItemProps>\n            const {displayName} = childElement.type\n            if(displayName === 'MenuItem' || displayName === 'SubMenu'){\n                return React.cloneElement(childElement, {\n                    index\n                })\n            }else{\n                console.error('Warning: Menu has a child which is not a MenuItem')\n            }\n        })\n    }\n    return (\n        <ul className={classes} style={style}>\n            <MenuContext.Provider value={passedContext}>\n            {renderChildren()}\n            </MenuContext.Provider>\n        </ul>\n    )\n}\nMenu.defaultProps = {\n    defaultIndex : 0,\n    mode : 'horizontal'\n}\nexport default Menu;"]},"metadata":{},"sourceType":"module"}