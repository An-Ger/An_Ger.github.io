{"ast":null,"code":"var _jsxFileName = \"/Users/an_ger/coding/An_Ger UI/src/components/Button/button.tsx\";\nimport React from \"react\";\nimport classNames from 'classnames';\nexport let ButtonSize;\n\n(function (ButtonSize) {\n  ButtonSize[\"Large\"] = \"lg\";\n  ButtonSize[\"Small\"] = \"sm\";\n})(ButtonSize || (ButtonSize = {}));\n\nexport let ButtonType;\n\n(function (ButtonType) {\n  ButtonType[\"Secondary\"] = \"secondary\";\n  ButtonType[\"Primary\"] = \"primary\";\n  ButtonType[\"Default\"] = \"default\";\n  ButtonType[\"Danger\"] = \"danger\";\n  ButtonType[\"Link\"] = \"link\";\n})(ButtonType || (ButtonType = {}));\n\nconst Button = props => {\n  const {\n    btnType,\n    disabled,\n    size,\n    children,\n    href\n  } = props;\n  const classes = classNames('btn', {\n    [`btn-${btnType}`]: btnType,\n    [`btn-${size}`]: size,\n    'disabled': btnType === ButtonType.Link && disabled\n  });\n\n  if (btnType === ButtonType.Link) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, children);\n  } else {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: classes,\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, children);\n  }\n};\n\nButton.defaultProps = {\n  disabled: false,\n  btnType: ButtonType.Default\n};\nexport default Button;","map":{"version":3,"sources":["/Users/an_ger/coding/An_Ger UI/src/components/Button/button.tsx"],"names":["React","classNames","ButtonSize","ButtonType","Button","props","btnType","disabled","size","children","href","classes","Link","defaultProps","Default"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAIZ,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAgBZ,MAAMC,MAAiC,GAAIC,KAAD,IAAW;AACnD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA,QAA3B;AAAqCC,IAAAA;AAArC,MAA8CL,KAApD;AACA,QAAMM,OAAO,GAAGV,UAAU,CAAC,KAAD,EAAO;AAC7B,KAAE,OAAMK,OAAQ,EAAhB,GAAoBA,OADS;AAE7B,KAAE,OAAME,IAAK,EAAb,GAAiBA,IAFY;AAG7B,gBAAaF,OAAO,KAAKH,UAAU,CAACS,IAAxB,IAAiCL;AAHhB,GAAP,CAA1B;;AAKA,MAAGD,OAAO,KAAKH,UAAU,CAACS,IAA1B,EAA+B;AAC3B,wBACA;AAAG,MAAA,SAAS,EAAED,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBF,QAAxB,CADA;AAGH,GAJD,MAIK;AACD,wBACA;AAAQ,MAAA,SAAS,EAAEE,OAAnB;AAA4B,MAAA,QAAQ,EAAEJ,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDE,QAAjD,CADA;AAGH;AACF,CAhBD;;AAiBAL,MAAM,CAACS,YAAP,GAAsB;AAClBN,EAAAA,QAAQ,EAAC,KADS;AAElBD,EAAAA,OAAO,EAAEH,UAAU,CAACW;AAFF,CAAtB;AAIA,eAAeV,MAAf","sourcesContent":["import React from \"react\";\nimport classNames from 'classnames'\nexport enum ButtonSize {\n  Large = \"lg\",\n  Small = \"sm\",\n}\nexport enum ButtonType {\n  Secondary = \"secondary\",\n  Primary = \"primary\",\n  Default = \"default\",\n  Danger = \"danger\",\n  Link = \"link\",\n}\n\ninterface BaseButtonProps {\n  className?: string;\n  disabled?: boolean;\n  size?: ButtonSize;\n  btnType?: ButtonType;\n  children: React.ReactNode;\n  href ?: string;\n}\nconst Button: React.FC<BaseButtonProps> = (props) => {\n  const { btnType, disabled, size, children, href } = props;\n  const classes = classNames('btn',{\n      [`btn-${btnType}`]: btnType,\n      [`btn-${size}`]: size,\n      'disabled': (btnType === ButtonType.Link) && disabled\n  })\n  if(btnType === ButtonType.Link){\n      return (\n      <a className={classes}>{children}</a>\n      )\n  }else{\n      return(\n      <button className={classes} disabled={disabled}>{children}</button>\n      )\n  }\n};\nButton.defaultProps = {\n    disabled:false,\n    btnType: ButtonType.Default\n}\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}